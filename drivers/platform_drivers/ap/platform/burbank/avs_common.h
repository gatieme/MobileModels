#ifndef __AVS_COMMON_H__
#define __AVS_COMMON_H__ 
#define __AVS_SECRAM_DATA 
#define __AVS_SECRAM_TEXT 
#define PLAT_MAX_HPM_SENSOR 8
#define HPM_CODE_GROUP_NUM 3
#define HPM_VOLT_PARA_NUM (PLAT_MAX_HPM_SENSOR + 1)
enum hpm_cluster_idx {
 AVS_LITTLE_CLUSTER = 0,
 AVS_MID_CLUSTER,
 AVS_BIG_CLUSTER,
 AVS_L3_CLUSTER,
 AVS_GPU_CLUSTER,
 AVS_MAX_CLUSTER,
 AVS_PERI_CLUSTER = AVS_MAX_CLUSTER,
 AVS_AO_CLUSTER,
 HPM_MAX_CLUSTER,
};
enum hpm_mode {
 CORE_HPM,
 CLUSTER_HPM,
 SCU_HPM = 0,
 SCU_HPMX = 1,
 CORE0_HPM,
 CORE0_HPMX,
 CORE1_HPM,
 CORE1_HPMX,
 CORE2_HPM,
 CORE2_HPMX,
 CORE3_HPM,
 CORE3_HPMX,
 CORE4_HPM,
 CORE4_HPMX,
 CORE5_HPM,
 CORE5_HPMX,
 CORE6_HPM,
 CORE6_HPMX,
 CORE7_HPM,
 CORE7_HPMX,
 CORE8_HPM,
 CORE8_HPMX,
 CORE9_HPM,
 CORE9_HPMX,
 CORE10_HPM,
 CORE10_HPMX,
 CORE11_HPM,
 CORE11_HPMX,
 CORE12_HPM,
 CORE12_HPMX,
 CORE13_HPM,
 CORE13_HPMX,
 CORE14_HPM,
 CORE14_HPMX,
 CORE15_HPM,
 CORE15_HPMX,
 AO_HPM,
 AO_HPMX,
 PERI_HPM,
 PERI_HPMX,
};
#endif
