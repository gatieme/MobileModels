#ifndef __PERI_VOLT_COMMON_H_
#define __PERI_VOLT_COMMON_H_ 
#include <peri_ao_volt.h>
#include <pmic_interface.h>
#define PERI_VSET_REG_ADDR PMIC_BUCK0_VSET_ADDR(0)
#define PERI_VOLT_STEP 5
#define PERI_CORE_MIN 270
#define PERI_AVS_DNLIMIT 535
#define peri_volt_code2mv(code) pmu_code2mv(code, PERI_CORE_MIN, PERI_VOLT_STEP)
#define peri_volt_mv2code(mv) pmu_mv2code(mv, PERI_CORE_MIN, PERI_VOLT_STEP)
enum vol_level {
 VOL_LEVEL0 = 0,
 VOL_LEVEL1,
 VOL_LEVEL2,
 VOL_LEVEL3,
 VOL_END
};
#define PERI_VOL_LOWTEMP VOL_LEVEL3
#define PERI_FREQ_LOWTEMP VOL_LEVEL2
#define PERI_FREQ_SECOND_LEVEL VOL_LEVEL2
#define PERI_VOLT_BOOT_LVL VOL_LEVEL3
enum peri_avs_page {
 PERI_AVS_STD = 0,
 PERI_AVS_DMSS,
 PERI_AVS_ISP,
 PERI_AVS_DSS,
 PERI_AVS_VENC,
 PERI_AVS_VDEC,
 PERI_AVS_IVP,
 PERI_AVS_IPP,
 PERI_AVS_NPU,
 PERI_AVS_EPS,
 PERI_AVS_MAX
};
#define PERI_AVS_BASE PERI_AVS_DMSS
enum peril_ip {
 PERI_SOFT_VOTE0_START = 0,
 DSS = PERI_SOFT_VOTE0_START,
 VDEC,
 VENC,
 ISPFUNC,
 ISPJPEG,
 IVPCORE,
 LOCK,
 EPS,
 PERI_SOFT_VOTE1_START = 8,
 NPU = PERI_SOFT_VOTE1_START,
 PERI_SOFT_CHANNEL9,
 PERI_SOFT_CHANNEL10,
 PERI_SOFT_CHANNEL11,
 PERI_SOFT_CHANNEL12,
 STD,
 TSENSOR,
 DDR,
 PERI_SOFT_CHANNEL_NUM = 16
};
enum peri_hrd_channel {
 PERI_HRD_CHANNEL0 = 0,
 PERI_HRD_CHANNEL1,
 PERI_HRD_CHANNEL2,
 PERI_HRD_CHANNEL3,
 PERI_HRD_CHANNEL_NUM = 4
};
typedef struct {
 SOC_PMCTRL_PERI_VOTE_VOL_RANK_SFT_0_UNION sft_vol_vote0;
 SOC_PMCTRL_PERI_VOTE_VOL_RANK_SFT_1_UNION sft_vol_vote1;
 SOC_PMCTRL_PERI_VOTE_VOL_VALID_UNION sft_channel_enable;
 SOC_PMCTRL_PERI_VOTE_SFT_CHG_UNION sft_req;
 SOC_PMCTRL_PERI_VOTE_SFT_CHG_BYPASS_UNION sft_req_bypass;
 SOC_PMCTRL_PERI_VOL_SFT_CLR_UNION sft_stable_clr;
 SOC_PMCTRL_PERI_VOL_STABLE_UNION sft_vol_stable;
 SOC_PMCTRL_PERI_INTR_M3ORCPU_MSK_UNION intr_m3orcpu_msk;
 SOC_PMCTRL_PERI_DVS_OUTPUT_READ_UNION output_state_read;
 SOC_PMCTRL_PERI_INTR_BYPASS_SFT_UNION intr_bypass_sft;
 SOC_PMCTRL_PERI_INTR_BYPASS_HRD_UNION intr_bypass_hrd;
} PERI_VOTE_CONFIG;
#define PERI_VOTE_CFG_BASE ((volatile PERI_VOTE_CONFIG*)(SOC_PMCTRL_PERI_VOTE_VOL_RANK_SFT_0_ADDR(PMC_BASE)))
typedef struct {
 SOC_PMCTRL_PERI_VOTE_VOL_IDX_0_UNION vol_reg[1];
} PERI_VOTE_VOL_IDX;
typedef struct {
 PERI_VOTE_VOL_IDX vote_vol[PERI_SOFT_CHANNEL_NUM];
 unsigned int reserved0[5];
 SOC_PMCTRL_PERI_PMU_TRIM_UP_TIME_UNION up_time;
 SOC_PMCTRL_PERI_PMU_TRIM_DN_TTME_UNION dn_time;
 unsigned int reserved1[2];
 SOC_PMCTRL_PERI_INIT_VOL_CONFIG_UNION init_vol_config;
 SOC_PMCTRL_PERI_FIX_VOL_CONFIG_UNION fix_vol_config;
 unsigned int reserved2[1];
 SOC_PMCTRL_PERI_VOL_READ_UNION vol_read;
 unsigned int reserved3[1];
 SOC_PMCTRL_PERI_VOL_RANK_IDX_0_UNION dpm_rank0;
 SOC_PMCTRL_PERI_VOL_RANK_IDX_1_UNION dpm_rank1;
 SOC_PMCTRL_PERI_VOTE_SFT_HRD_VOL_IDX_UNION hrd_vote_vol;
 SOC_PMCTRL_PERI_STAT_TIME_HOLD_UNION hold_time;
 unsigned int reserved4[2];
 SOC_PMCTRL_PERI_VOL_CHG_FLAG_UNION vol_chg_flag;
 SOC_PMCTRL_PERI_VALID_HRD_VOL_IDX_UNION valid_har_vol;
} PERI_VOTE_INIT;
#define PERI_VOTE_INIT_BASE ((volatile PERI_VOTE_INIT*)(SOC_PMCTRL_PERI_VOTE_VOL_IDX_0_ADDR(PMC_BASE)))
#define SYSBUS_HIGH_RATE MK_MASK_VAL(0x6, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_sysbus_pll_START)
#define SYSBUS_NORM_RATE MK_MASK_VAL(0x9, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_sysbus_pll_START)
#define SYSBUS_HIGHSVS_RATE MK_MASK_VAL(0xC, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_sysbus_pll_START)
#define SYSBUS_LOW_RATE MK_MASK_VAL(0xF, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_sysbus_pll_START)
#define GIC_HIGH_RATE MK_MASK_VAL(0x7, 0x3F, SOC_CRGPERIPH_CLKDIV17_div_cpu_gic_START)
#define GIC_NORM_RATE MK_MASK_VAL(0x7, 0x3F, SOC_CRGPERIPH_CLKDIV17_div_cpu_gic_START)
#define GIC_HIGHSVS_RATE MK_MASK_VAL(0x7, 0x3F, SOC_CRGPERIPH_CLKDIV17_div_cpu_gic_START)
#define GIC_LOW_RATE MK_MASK_VAL(0x9, 0x3F, SOC_CRGPERIPH_CLKDIV17_div_cpu_gic_START)
#define DCDR_HIGH_RATE MK_MASK_VAL(0x1, 0x3, SOC_CRGPERIPH_CLKDIV11_div_clk_dcdrbus_START)
#define DCDR_NORM_RATE MK_MASK_VAL(0x1, 0x3, SOC_CRGPERIPH_CLKDIV11_div_clk_dcdrbus_START)
#define DCDR_HIGHSVS_RATE MK_MASK_VAL(0x2, 0x3, SOC_CRGPERIPH_CLKDIV11_div_clk_dcdrbus_START)
#define DCDR_LOW_RATE MK_MASK_VAL(0x2, 0x3, SOC_CRGPERIPH_CLKDIV11_div_clk_dcdrbus_START)
#define LPMCU_HIGH_RATE MK_MASK_VAL(0x8, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_lpmcu_START)
#define LPMCU_NORM_RATE MK_MASK_VAL(0x8, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_lpmcu_START)
#define LPMCU_HIGHSVS_RATE MK_MASK_VAL(0x8, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_lpmcu_START)
#define LPMCU_LOW_RATE MK_MASK_VAL(0xA, 0x1F, SOC_CRGPERIPH_CLKDIV0_div_lpmcu_START)
#define PCRG_REG_ADDR(reg,master) SOC_CRGPERIPH_ ##reg ##_ADDR(SOC_ ##master ##_PERI_CRG_BASE_ADDR)
#define PCRG_REG_PTR(reg,master) (volatile SOC_CRGPERIPH_ ##reg ##_UNION *)(uintptr_t)(PCRG_REG_ADDR(reg, master))
#define SYSBUS_DIV_REG_ADDR(cpu) PCRG_REG_ADDR(CLKDIV0, cpu)
#define SYSBUS_DIV_REG_PTR(cpu) PCRG_REG_PTR(CLKDIV0, cpu)
#define DCDRBUS_DIV_REG_ADDR(cpu) PCRG_REG_ADDR(CLKDIV11, cpu)
#define DCDRBUS_DIV_REG_PTR(cpu) PCRG_REG_PTR(CLKDIV11, cpu)
#define CPUGIC_DIV_REG_ADDR(cpu) PCRG_REG_ADDR(CLKDIV17, cpu)
#define CPUGIC_DIV_REG_PTR(cpu) PCRG_REG_PTR(CLKDIV17, cpu)
#define DEFLATE_DIV_REG_ADDR(cpu) PCRG_REG_ADDR(CLKDIV26, cpu)
#define DEFLATE_DIV_REG_PTR(cpu) PCRG_REG_PTR(CLKDIV26, cpu)
#define LPMCU_DIV_REG_ADDR(cpu) PCRG_REG_ADDR(CLKDIV0, cpu)
#define LPMCU_DIV_REG_PTR(cpu) PCRG_REG_PTR(CLKDIV0, cpu)
#define PERI_PA_EFUSE_START EFUSE_PASENSOR_A73_START + 5
#define PERI_PA_EFUSE_ID EFUSE_PASENSOR_A73
struct peri_bus_freq {
 unsigned int freq[VOL_END];
 unsigned int addr;
};
extern int tc_perivolt_set_hibench_high(enum peri_avs_page id);
extern int tc_perivolt_set_hibench_ultralow(enum peri_avs_page id);
extern void peril_config_busclk(int volt_lvl);
#endif
