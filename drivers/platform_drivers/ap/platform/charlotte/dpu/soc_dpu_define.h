#ifndef __SOC_DPU_DEFINE_H__
#define __SOC_DPU_DEFINE_H__ 
#include "soc_dpu_interface.h"
#include "soc_dpu_dacc_interface.h"
#ifdef __cplusplus
 #if __cplusplus
  extern "C" {
 #endif
#endif
#define INIT_UNION_ZERO {.value = 0}
enum DPU_OPR_TYPE_ID {
 OPR_NONE = 0,
 OPR_RESERVED1 = 1,
 OPR_OV = 2,
 OPR_HDR = 3,
 OPR_UVUP = 4,
 OPR_CLD = 5,
 OPR_SCL = 6,
 OPR_SDMA = 7,
 OPR_SROT = 8,
 OPR_HEMCD = 9,
 OPR_DPP = 10,
 OPR_DDIC = 11,
 OPR_DSC = 12,
 OPR_WCH = 13,
 OPR_ITFSW = 14,
 OPR_DEMURA0 = 15,
 OPR_DEBN = 16,
 OPR_PRELOAD = 17,
 OPR_DEMURA1 = 18,
 OPR_INVALID = 31,
};
enum {
 DISP_IP_BASE_DPU = 0,
 DISP_IP_BASE_PERI_CRG,
 DISP_IP_BASE_SCTRL,
 DISP_IP_BASE_PCTRL,
 DISP_IP_BASE_PMCTRL,
 DISP_IP_BASE_MEDIA1_CRG,
 DISP_IP_BASE_HSDT1_CRG,
 DISP_IP_BASE_HIDPTX,
 DISP_IP_BASE_SOURCELOCK,
 DISP_IP_MAX,
};
enum SCENE_ID {
 DPU_SCENE_ONLINE_0 = 0,
 DPU_SCENE_ONLINE_1,
 DPU_SCENE_ONLINE_2,
 DPU_SCENE_ONLINE_3,
 DPU_SCENE_OFFLINE_0,
 DPU_SCENE_OFFLINE_1,
 DPU_SCENE_OFFLINE_2,
 DPU_SCENE_INITAIL,
 DPU_SCENE_SECURITY,
 DPU_SCENE_MAX,
};
enum scene_mode {
 SCENE_MODE_NORMAL = 0,
 SCENE_MODE_PRELOAD,
 SCENE_MODE_SINGLE_LAYER,
 SCENE_MODE_COPYBIT,
 SCENE_MODE_OV_PATTERN,
 SCENE_MODE_DPP_COLORBAR,
 SCENE_MODE_ITFSW_COLORBAR,
 SCENE_MODE_MAX
};
enum SDMA_IDX {
 DPU_SDMA0 = 0,
 DPU_SDMA1,
 DPU_SDMA2,
 DPU_SDMA3,
};
#define DACC_IM_OFFSET (0x0)
#define DACC_DM_OFFSET (0x00010000)
#define DMD_OFFSET (0x00010000)
#define DACC_OFFSET (0x0001E000)
#define DMC_OFFSET (0x00022000)
#define DACC_IM_LENGTH (0x0000A000)
#define DACC_DM_LENGTH (0x00002A00)
#define DACC_FIRMWARE_SIZE (0x00020000)
#define DM_INPUTDATA_ST_ADDR0 (DMD_OFFSET + 0x7400)
#define DM_INPUTDATA_ST_ADDR1 (DMD_OFFSET + 0x6400)
#define DM_INPUTDATA_ST_ADDR2 (DMD_OFFSET + 0x5A00)
#define DM_INPUTDATA_ST_ADDR3 (DMD_OFFSET + 0x5000)
#define DM_INPUTDATA_ST_ADDR4 (DMD_OFFSET + 0x4600)
#define DM_INPUTDATA_ST_ADDR5 (DMD_OFFSET + 0x3C00)
#define DM_INPUTDATA_ST_ADDR6 (DMD_OFFSET + 0x3200)
#define DM_DPP_INITAIL_ST_ADDR (DMD_OFFSET + 0x8400)
#define DM_SECURITY_ST_ADDR (DMD_OFFSET + 0x8C00)
struct cmdlist_dm_addr_info {
 int scene_id;
 unsigned dm_data_addr;
 unsigned dm_data_size;
};
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-variable"
static struct cmdlist_dm_addr_info g_dm_tlb_info[DPU_SCENE_MAX] = {
 { DPU_SCENE_ONLINE_0, DACC_OFFSET + DM_INPUTDATA_ST_ADDR0, 0x1000, },
 { DPU_SCENE_ONLINE_1, DACC_OFFSET + DM_INPUTDATA_ST_ADDR1, 0x1000, },
 { DPU_SCENE_ONLINE_2, DACC_OFFSET + DM_INPUTDATA_ST_ADDR2, 0xA00, },
 { DPU_SCENE_ONLINE_3, DACC_OFFSET + DM_INPUTDATA_ST_ADDR3, 0xA00, },
 { DPU_SCENE_OFFLINE_0, DACC_OFFSET + DM_INPUTDATA_ST_ADDR4, 0xA00, },
 { DPU_SCENE_OFFLINE_1, DACC_OFFSET + DM_INPUTDATA_ST_ADDR5, 0xA00, },
 { DPU_SCENE_OFFLINE_2, DACC_OFFSET + DM_INPUTDATA_ST_ADDR6, 0xA00, },
 { DPU_SCENE_INITAIL, DACC_OFFSET + DM_DPP_INITAIL_ST_ADDR, 0x800, },
 { DPU_SCENE_SECURITY, DACC_OFFSET + DM_SECURITY_ST_ADDR, 0x400, },
};
#pragma GCC diagnostic pop
#define SDMA_SWID_NUM 7
#define WCH_SWID_NUM 2
#define DPU_SSID_MAX_NUM 3
#define MDC_SDMA_INDEX 2
#define MDC_HDR_INDEX 0
#define MDC_OV_INDEX 2
#define MDC_WCH_INDEX 1
#define DPU_ITF_CH0_OFFSET (0x0CC000)
#define DPU_ITF_CH1_OFFSET (0x0CC100)
#define DPU_ITF_CH2_OFFSET (0x0CC200)
#define DPU_ITF_CH3_OFFSET (0x0CC300)
#define DPU_PIPE_SW_OFFSET (0xCC400)
#define DPU_GLB0_OFFSET (0x00013000)
#define DPU_WCH0_OFFSET (0x00015000)
#define DPU_WCH1_OFFSET (0x0006D000)
#define DPU_WCH2_OFFSET (0x00071000)
#define DPU_DBCU_OFFSET (0x00019000)
#define DPU_DBCU0_OFFSET (0x00019000)
#define DPU_DBCU1_OFFSET (0x00019000)
enum {
 SCL_TYPE_ARSR = 0,
 SCL_TYPE_VSCF,
};
#define DPU_VSCF_COUNT 2
#define SCL_THRESHOLD_DEFAULT_LEVEL 2
#define MAX_WLT_SLICE_COUNT 4
enum HebceSizeMax {
    HEBCE_WIDTH_MAX_1 = 1024,
    HEBCE_WIDTH_MAX_2 = 512,
    HEBCE_WIDTH_MAX_3 = 1024,
    HEBCE_HEIGHT_MAX = 8192,
    HEBCE_WIDTH_MAX_ROT = 8192,
    HEBCE_HEIGHT_MAX_ROT = 512
};
enum HebceSizeMin {
    HEBCE_WIDTH_RGB_MIN = 32,
    HEBCE_HEIGHT_RGB_MIN = 4,
    HEBCE_WIDTH_NV12_MIN = 64,
    HEBCE_HEIGHT_NV12_MIN = 16,
    HEBCE_WIDTH_NV12_10BIT_MIN = 32,
    HEBCE_HEIGHT_NV12_10BIT_MIN = 16,
    HEBCE_WIDTH_RGB_ROT_MIN = 16,
    HEBCE_HEIGHT_RGB_ROT_MIN = 8,
    HEBCE_WIDTH_NV12_ROT_MIN = 64,
    HEBCE_HEIGHT_NV12_ROT_MIN = 16,
    HEBCE_WIDTH_NV12_10BIT_ROT_MIN = 32,
    HEBCE_HEIGHT_NV12_10BIT_ROT_MIN = 16
};
#define DPU_CMDLIST_OFFSET (0x00012000)
#define DPU_LBUF_OFFSET (0x0001B000)
#define DPU_LBUF_SCNx_FLUX_CTRL_OFFSET(scene_id) (0x00000010 * (scene_id))
#define DPU_SMMU_OFFSET (0x00002000)
#define DPU_SMMU1_OFFSET (0x00006000)
#define DPU_ARSR0_OFFSET (0x000CD000)
#define DPU_ARSR1_OFFSET (0x00078000)
#define DPU_VSCF0_OFFSET (0x0007F000)
#define DPU_VSCF1_OFFSET (0x00083000)
#define DPU_HDR_OFFSET (0x00087000)
#define DPU_HDR_GMP_LUT_OFFSET (0x0008B000)
#define DPU_CLD0_OFFSET (0x0008D000)
#define DPU_CLD1_OFFSET (0x0008E000)
#define DPU_HEMCD0_OFFSET (0x00075000)
#define DPU_HEMCD1_OFFSET (0x00076000)
#define DPU_RCH_OV_OFFSET (0x0001C000)
#define DPU_UVUP_OFFSET (0x0008F000)
#define DPU_DPP0_OFFSET (0x000B4000)
#define DPU_DPP1_OFFSET (0x000DD000)
#define DPU_DPP0_HIACE_OFFSET (0x000C9000)
#define DPU_DDIC0_OFFSET (0x000B0000)
#define DPU_DDIC1_OFFSET (0x000D9000)
#define DPU_DSC0_OFFSET (0x000D4000)
#define DPU_DSC1_OFFSET (0x000FE000)
#define DPU_MIPI_DSI0_OFFSET 0x00000000
#define DPU_MIPI_DSI1_OFFSET 0x00000400
#define DPU_MIPI_DSI2_OFFSET 0x00000800
#define DPU_MIPI_DSI_GLB_OFFSET 0x00000C00
#define MIPIDSI_PHY_TST_CLK_PRE_DELAY (0x000100B0)
#define MIPIDSI_PHY_TST_CLK_POST_DELAY (0x000100B1)
#define MIPIDSI_PHY_TST_CLK_TLPX (0x000100B2)
#define MIPIDSI_PHY_TST_CLK_PREPARE (0x000100B3)
#define MIPIDSI_PHY_TST_CLK_ZERO (0x000100B4)
#define MIPIDSI_PHY_TST_CLK_TRAIL (0x000100B5)
#define MIPIDSI_PHY_TST_DATA_PRE_DELAY (0x00010070)
#define MIPIDSI_PHY_TST_DATA_POST_DELAY (0x00010071)
#define MIPIDSI_PHY_TST_DATA_TLPX (0x00010072)
#define MIPIDSI_PHY_TST_DATA_PREPARE (0x00010073)
#define MIPIDSI_PHY_TST_DATA_ZERO (0x00010074)
#define MIPIDSI_PHY_TST_DATA_TRAIL (0x00010075)
#define MIPIDSI_PHY_TST_LANE_TRANSMISSION_PROPERTY (0x00010077)
#define DPU_WIDTH_MIN 16
#define DPU_HEIGHT_MIN 16
#define SCF_MIN_WIDTH 16
#define SCF_MIN_HEIGHT 16
#define SCF_INC_FACTOR 262144
#define SCF_INC_OFFSET 131072
#define SCF_INPUT_OV 16
#define ARSR2P_INC_FACTOR 65536
#define ARSR2P_INPUT_OV 16
#define WDMA_ADDR_PIXEL_ALIGN 16
#define WDMA_ADDR_PIXEL_ALIGN_HEBC_RGB 32
#define WDMA_HEIGHT_PIXEL_ALIGN 16
#define DPU_CLIP_MAX_VAL 63
#define ITF_CLIP_SUPPORT 0b1100
#define SDMA_INPUT_OV_WIDTH_LIMIT 4096
#define DEFAULT_VBLOCK_WIDTH 512
#define TRANSFORM_VBLOCK_WIDTH 512
#define VBLOCK_WIDTH_MAX 8192
#define VBLOCK_WIDTH_MIN 256
#define VBLOCK_OVERLAP_SIZE 32
#define SCF_LAYER_MIN_GAP 32
#define REUSE_MIN_GAP 64
#define LBUF_REUSE_MIN_GAP 4
#define DPU_CORE_FREQ_OFF 105000000UL
#define DPU_CORE_FREQ0 279000000UL
#define DPU_CORE_FREQ1 418000000UL
#define DPU_CORE_FREQ2 480000000UL
#define DPU_CORE_FREQ3 643000000UL
#define DPU_PERF_LEVEL_MAX 4
#define FREQ3_PLL2B_CLK_DIV 0b0000
#define DPU_CORE_LEVEL_OFF 0
#define DPU_CORE_LEVEL_ON 1
#define GLB_PM_CTRL_VALUE 0x0401A00F
#define DSI_PM_CTRL_VALUE 0x0401A00F
#define VALID_DISPLAY_TIME_RATIO 0.97
#define TE_JITTER_FACTOR 0.97
#define ROT_EFFECT_FACTOR_SDMA 2.2
#define ROT_EFFECT_FACTOR_SCL 1.25
#define RESERVE_VOTE_PER 1.05
#define RESERVE_VOTE_PER_WITH_ROT 1.2
#define AXI_BYTE_WIDTH 16
#define AXI_UTILIZATION 0.8
#define DUAL_PIXEL_PERFORMANCE 2
#define SINGLE_PIXEL_PERFORMANCE 1
#define VSCF_OUT_PIXEL_PERFORMANCE 1.6
#define BIT_TO_BYTE 8.0
#define INVALID_ROW_BEATS 80
#define DVFS_HEBC_RGB_PIXEL_ALIGN 4
#define DVFS_HEBC_RGB_PIXEL_ROT_ALIGN 8
#define DVFS_HEBC_YUV420_PIXEL_ALIGN 16
#define OV_PIXEL_PERFORMANCE_LIMIT_FACTOR 1.5
#define VSCF_ZOOM_BASE_FACTOR 2.28
#define VSCF_ZOOM_CAL_COEFFICIENT 0.42
#define VSCF_ZOOM_UPPER_DATA 1.9
#define VSCF_ZOOM_DOWN_DATA 1.5
#ifdef __cplusplus
 #if __cplusplus
  }
 #endif
#endif
#endif
